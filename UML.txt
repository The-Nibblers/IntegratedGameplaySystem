@startuml

interface IDamageable {
    +int health
    void tryDamage(int amount)
    void takeDamage(int amount)
}

interface IPlayerStats {
    +PlayerStats
}

interface ICommand {
    void execute()
}

interface IDirectionalCommand {
    void execute()
    void setDirection(Direction dir)  'example for direction input
}

interface IWaveBuilder {
    void BuildStrong()
    void BuildWeak()
    void BuildMedium()
    Wave GetWave()
}

enum ItemType

enum UIItemType

class GameManager {
    -playervars
    void Awake()
    void Update()
}

class BasePlayerStats {
    -PlayerVars
}

class StatsDecorator

class DamageModifier {
    -float bonus
}

class FireRateModifier {
    -float bonus
}

class HealthModifier {
    -float bonus
}

class SpeedModifier {
    -float bonus
}

class Player {
    void Shoot()
    UIManager uiManager  'new
}

class InputHandler {
    -ICommand ShootCommand
    -ICommand QuitCommand
    -IDirectionalCommand LookCommand
    -IDirectionalCommand MoveCommand
    void HandleInput()
}

class MoveCommand

class LookCommand

class ShootCommand

class QuitCommand

class Enemy {
    +EnemyStats
    ItemDropper itemDropper
}

class Wave {
    +List<Enemy> enemies
}

class WaveBuilder {
    void BuildStrong()
    void BuildWeak()
    void BuildMedium()
    Wave GetWave()
}

class WaveDirector {
    void BuildExampleWave()
}

class ItemDropper {
    +List<Item> items
}

class Item {
    ItemType type
}

class UIManager {
    +List<UIItemEntry> itemEntries
    UIItems uiItems
}

class UIItemEntry {
    UIItemType key
    int value
}

class UIItems

IDamageable <.. Player
IDamageable <.. Enemy

ICommand <.. ShootCommand
ICommand <.. QuitCommand

IDirectionalCommand <.. LookCommand
IDirectionalCommand <.. MoveCommand

InputHandler *-- ShootCommand
InputHandler *-- QuitCommand
InputHandler *-- LookCommand
InputHandler *-- MoveCommand

Player --> InputHandler : Uses
Player --> UIManager : Has

IPlayerStats <.. BasePlayerStats
GameManager *-- BasePlayerStats
GameManager *-- Player
GameManager *-- WaveDirector

StatsDecorator <|.. DamageModifier
StatsDecorator <|.. FireRateModifier
StatsDecorator <|.. HealthModifier
StatsDecorator <|.. SpeedModifier

WaveBuilder ..|> IWaveBuilder
WaveBuilder --> Wave : Uses
WaveDirector --> WaveBuilder : Uses
Wave --> Enemy : Uses

Enemy --> ItemDropper : Has
ItemDropper --> Item : Has

UIManager --> UIItemEntry : Contains
UIManager --> UIItems : Contains

@enduml
